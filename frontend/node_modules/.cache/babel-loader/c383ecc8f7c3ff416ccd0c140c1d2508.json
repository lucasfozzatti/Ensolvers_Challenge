{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fozza\\\\Ensolvers_challenge\\\\mern-crud-tasks-master\\\\frontend\\\\src\\\\FolderPanel.js\";\nimport React from 'react';\nimport Item from './Item';\nimport './css/List.css';\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport Footer from './footer';\nimport { useHistory } from \"react-router-dom\";\nimport Folder from './folders';\nimport './css/List_Movement.css';\nimport Menu from './Menu';\nimport { useUsuario } from './context/usuario-context'; // const userAuthenticated = () =>{\n//   Axios.get('isUserAuth',{\n//     headers: {\n//       \"Authorization\" : localStorage.getItem('token')\n//     }\n//   }).then((response)=>{\n//    console.log(\"hola\",response.data);\n//  })\n// }\n// function FolderPanel(props){\n//   console.log(\"budget\")\n//   const {id,folderscount,setid} = useUsuario();\n//   const [datafolder, setdatafolder] = useState([])\n//   const [newfolder, setnewfolder] = useState('')\n//   let history = useHistory();\n//   const Logout = () =>{\n//     localStorage.removeItem('token')\n//     history.push(\"/register\")\n//   }\n//   useEffect( () => {\n//     const folder = () => {\n//       setid(localStorage.getItem('user'))\n//       Axios.get('folders/'+ id,{\n//       }).then((response) => {\n//         console.log(response.data.result) \n//         setdatafolder(response.data.result)\n//       });\n//     }\n//     folder()\n//   },[newfolder]);  \n//   const addnewFolder = (event) => {\n//     event.preventDefault();\n//     Axios.post('save_folder',{\n//       name : newfolder,\n//       user_id : id\n//     })\n//     setdatafolder((prevItems)=>[...prevItems,{name:newfolder, user_id: id}]); \n//   }\n//     return(\n//       <div>    \n//           <div>\n//             <Menu/>\n//           </div>\n//           <div className=\"box-movement\">\n//                 <p className=\"text-newfolder\">Create a new folder</p>\n//                 <div className=\"addfolder-container\">\n//                   <input className=\"newfolder\"type=\"text\" value={newfolder} placeholder=\"NEW FOLDER\"\n//                   onChange={(e)=>{\n//                     setnewfolder(e.target.value);\n//                   }}\n//                   >\n//                   </input>\n//                   <button className=\"button-folder\" \n//                   onClick={()=> {setnewfolder(\"\");addnewFolder(addnewFolder) }}\n//                   >Add</button>\n//                 </div>\n//                 <div className=\"list-movement\">\n//                   {datafolder.map((movement)=>{\n//                     return (\n//                       <Folder  key={movement.folder_id} id={movement.folder_id} name={movement.name}/>\n//                     )\n//                   })}\n//                 </div>\n//           </div>\n//       </div>              \n//     );\n// }\n// export default  FolderPanel;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddItemForm = props => /*#__PURE__*/_jsxDEV(\"form\", {\n  onSubmit: props.handleAddItem,\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Enter some value\",\n    autoComplete: \"off\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    children: \"Add Item\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 113,\n  columnNumber: 3\n}, this);\n\n_c = AddItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddItemForm\");","map":{"version":3,"sources":["C:/Users/fozza/Ensolvers_challenge/mern-crud-tasks-master/frontend/src/FolderPanel.js"],"names":["React","Item","useState","useEffect","Axios","Footer","useHistory","Folder","Menu","useUsuario","AddItemForm","props","handleAddItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,gBAAP;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAmB,OAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,yBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,UAAR,QAAyB,2BAAzB,C,CAEA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,iBAClB;AAAM,EAAA,QAAQ,EAAEA,KAAK,CAACC,aAAtB;AAAA,0BACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,kBAHd;AAIE,IAAA,YAAY,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA,UADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMF,W","sourcesContent":["import React from 'react';\r\nimport Item from './Item';\r\nimport './css/List.css';\r\nimport {useState, useEffect} from \"react\";\r\nimport Axios  from \"axios\";\r\nimport Footer from './footer';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Folder from './folders';\r\nimport './css/List_Movement.css';\r\nimport Menu from './Menu';\r\nimport {useUsuario} from './context/usuario-context';\r\n\r\n// const userAuthenticated = () =>{\r\n  \r\n  \r\n//   Axios.get('isUserAuth',{\r\n//     headers: {\r\n//       \"Authorization\" : localStorage.getItem('token')\r\n//     }\r\n\r\n//   }).then((response)=>{\r\n     \r\n//    console.log(\"hola\",response.data);\r\n//  })\r\n// }\r\n\r\n  \r\n// function FolderPanel(props){\r\n//   console.log(\"budget\")\r\n//   const {id,folderscount,setid} = useUsuario();\r\n//   const [datafolder, setdatafolder] = useState([])\r\n//   const [newfolder, setnewfolder] = useState('')\r\n  \r\n//   let history = useHistory();\r\n \r\n    \r\n//   const Logout = () =>{\r\n//     localStorage.removeItem('token')\r\n//     history.push(\"/register\")\r\n//   }\r\n\r\n  \r\n\r\n//   useEffect( () => {\r\n\r\n//     const folder = () => {\r\n      \r\n//       setid(localStorage.getItem('user'))\r\n//       Axios.get('folders/'+ id,{\r\n//       }).then((response) => {\r\n//         console.log(response.data.result) \r\n//         setdatafolder(response.data.result)\r\n        \r\n//       });\r\n//     }\r\n    \r\n//     folder()\r\n//   },[newfolder]);  \r\n\r\n\r\n//   const addnewFolder = (event) => {\r\n//     event.preventDefault();\r\n//     Axios.post('save_folder',{\r\n//       name : newfolder,\r\n//       user_id : id\r\n//     })\r\n//     setdatafolder((prevItems)=>[...prevItems,{name:newfolder, user_id: id}]); \r\n//   }\r\n\r\n\r\n  \r\n\r\n//     return(\r\n//       <div>    \r\n//           <div>\r\n//             <Menu/>\r\n//           </div>\r\n//           <div className=\"box-movement\">\r\n\r\n//                 <p className=\"text-newfolder\">Create a new folder</p>\r\n//                 <div className=\"addfolder-container\">\r\n//                   <input className=\"newfolder\"type=\"text\" value={newfolder} placeholder=\"NEW FOLDER\"\r\n//                   onChange={(e)=>{\r\n//                     setnewfolder(e.target.value);\r\n//                   }}\r\n//                   >\r\n//                   </input>\r\n                  \r\n//                   <button className=\"button-folder\" \r\n//                   onClick={()=> {setnewfolder(\"\");addnewFolder(addnewFolder) }}\r\n//                   >Add</button>\r\n//                 </div>\r\n//                 <div className=\"list-movement\">\r\n                \r\n//                   {datafolder.map((movement)=>{\r\n                    \r\n//                     return (\r\n                      \r\n//                       <Folder  key={movement.folder_id} id={movement.folder_id} name={movement.name}/>\r\n//                     )\r\n//                   })}\r\n//                 </div>\r\n//           </div>\r\n//       </div>              \r\n//     );\r\n// }\r\n\r\n\r\n// export default  FolderPanel;\r\n\r\n\r\nconst AddItemForm = (props) => (\r\n  <form onSubmit={props.handleAddItem}>\r\n    <input\r\n      type=\"text\"\r\n      name=\"text\"\r\n      placeholder=\"Enter some value\"\r\n      autoComplete=\"off\"\r\n    />\r\n    <button>Add Item</button>\r\n  </form>\r\n);"]},"metadata":{},"sourceType":"module"}