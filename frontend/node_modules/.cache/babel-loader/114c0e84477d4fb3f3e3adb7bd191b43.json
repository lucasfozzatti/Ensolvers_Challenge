{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fozza\\\\Ensolvers_challenge\\\\mern-crud-tasks-master\\\\Ensolvers_Challenge\\\\frontend\\\\src\\\\FolderPanel.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './css/List.css';\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport Folder from './folders';\nimport './css/List_Movement.css';\nimport Menu from './Menu';\nimport { useUsuario } from './context/usuario-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FolderPanel(props) {\n  _s();\n\n  const {\n    id,\n    folderscount,\n    setid\n  } = useUsuario();\n  const [datafolder, setdatafolder] = useState([]);\n  const [newfolder, setnewfolder] = useState('');\n  useEffect(() => {\n    const folder = () => {\n      setid(localStorage.getItem('user'));\n      Axios.get('folders/' + id, {}).then(response => {\n        setdatafolder(response.data.result);\n      });\n    };\n\n    folder();\n  }, [id, folderscount]);\n\n  const addnewFolder = () => {\n    Axios.post('save_folder', {\n      name: newfolder,\n      user_id: id\n    }).setdatafolder([...datafolder, {\n      name: newfolder,\n      user_id: id\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-movement\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-newfolder\",\n        children: \"Create a new folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addfolder-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"newfolder\",\n          type: \"text\",\n          value: newfolder,\n          placeholder: \"NEW FOLDER\",\n          onChange: e => {\n            setnewfolder(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-folder\",\n          onClick: () => {\n            setnewfolder(\"\");\n            addnewFolder();\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-movement\",\n        children: datafolder.map(movement => {\n          return /*#__PURE__*/_jsxDEV(Folder, {\n            id: movement.folder_id,\n            name: movement.name\n          }, movement.folder_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FolderPanel, \"JSQHlJwMqYOmgvtVvwRAkVkyNxs=\", false, function () {\n  return [useUsuario];\n});\n\n_c = FolderPanel;\nexport default FolderPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"FolderPanel\");","map":{"version":3,"sources":["C:/Users/fozza/Ensolvers_challenge/mern-crud-tasks-master/Ensolvers_Challenge/frontend/src/FolderPanel.js"],"names":["React","useState","useEffect","Axios","Folder","Menu","useUsuario","FolderPanel","props","id","folderscount","setid","datafolder","setdatafolder","newfolder","setnewfolder","folder","localStorage","getItem","get","then","response","data","result","addnewFolder","post","name","user_id","e","target","value","map","movement","folder_id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './css/List.css';\r\nimport {useState, useEffect} from \"react\";\r\nimport Axios  from \"axios\";\r\nimport Folder from './folders';\r\nimport './css/List_Movement.css';\r\nimport Menu from './Menu';\r\nimport {useUsuario} from './context/usuario-context';\r\n\r\nfunction FolderPanel(props){\r\n \r\n  const {id,folderscount,setid} = useUsuario();\r\n  const [datafolder, setdatafolder] = useState([])\r\n  const [newfolder, setnewfolder] = useState('')\r\n  \r\n  useEffect( () => {\r\n\r\n    const folder = () => {\r\n      \r\n      setid(localStorage.getItem('user'))\r\n      Axios.get('folders/'+ id,{\r\n      }).then((response) => {\r\n        setdatafolder(response.data.result)\r\n        \r\n      });\r\n      \r\n    }\r\n    \r\n    folder()\r\n  },[id, folderscount]);  \r\n\r\n\r\n  const addnewFolder = () => {\r\n    \r\n    Axios.post('save_folder',{\r\n      name : newfolder,\r\n      user_id : id\r\n    }).\r\n    setdatafolder([\r\n      ...datafolder,\r\n      {name:newfolder, user_id: id}\r\n\r\n    ]); \r\n  }\r\n\r\n    return(\r\n      <div>    \r\n          <div>\r\n            <Menu/>\r\n          </div>\r\n          <div className=\"box-movement\">\r\n\r\n              <p className=\"text-newfolder\">Create a new folder</p>\r\n              <div className=\"addfolder-container\">\r\n                <input className=\"newfolder\"type=\"text\" value={newfolder} placeholder=\"NEW FOLDER\"\r\n                onChange={(e)=>{\r\n                  setnewfolder(e.target.value);\r\n                }}\r\n                >\r\n                </input>\r\n                \r\n                <button className=\"button-folder\" \r\n                onClick={()=> {setnewfolder(\"\");addnewFolder() }}\r\n                >Add</button>\r\n              </div>\r\n              <div className=\"list-movement\">\r\n                \r\n                {datafolder.map((movement)=>{\r\n        \r\n                  return (\r\n                    <Folder  key={movement.folder_id} id={movement.folder_id} name={movement.name}/>\r\n                  )\r\n                  \r\n                })}\r\n\r\n              </div>\r\n          </div>\r\n      </div>              \r\n    );\r\n}\r\n\r\n\r\nexport default  FolderPanel;"]},"metadata":{},"sourceType":"module"}