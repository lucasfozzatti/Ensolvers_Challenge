{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fozza\\\\Ensolvers_challenge\\\\mern-crud-tasks-master\\\\frontend\\\\src\\\\FolderPanel.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Item from './Item';\nimport './css/List.css';\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport Footer from './footer';\nimport { useHistory } from \"react-router-dom\";\nimport Folder from './folders';\nimport './css/List_Movement.css';\nimport Menu from './Menu';\nimport { useUsuario } from './context/usuario-context'; // const userAuthenticated = () =>{\n//   Axios.get('isUserAuth',{\n//     headers: {\n//       \"Authorization\" : localStorage.getItem('token')\n//     }\n//   }).then((response)=>{\n//    console.log(\"hola\",response.data);\n//  })\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FolderPanel(props) {\n  _s();\n\n  console.log(\"budget\");\n  const {\n    id,\n    setid\n  } = useUsuario();\n  const [datafolder, setdatafolder] = useState([]);\n  const [count, setcount] = useState(len(datafolder));\n  const [newfolder, setnewfolder] = useState('');\n  let history = useHistory();\n\n  const Logout = () => {\n    localStorage.removeItem('token');\n    history.push(\"/register\");\n  };\n\n  useEffect(() => {\n    const folder = () => {\n      setid(localStorage.getItem('user'));\n      Axios.get('folders/' + id, {}).then(response => {\n        console.log(response.data.result);\n        setdatafolder(response.data.result);\n      });\n    };\n\n    folder();\n  }, [id, count]);\n\n  const addnewFolder = () => {\n    Axios.post('save_folder', {\n      name: newfolder,\n      user_id: id\n    }); // setdatafolder([\n    //   ...datafolder,\n    //   {name:newfolder, user_id: id}\n    // ]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-movement\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-newfolder\",\n        children: \"Create a new folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addfolder-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"newfolder\",\n          type: \"text\",\n          value: newfolder,\n          placeholder: \"NEW FOLDER\",\n          onChange: e => {\n            setnewfolder(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-folder\",\n          onClick: () => {\n            setnewfolder(\"\");\n            addnewFolder();\n            setcount(count + 1);\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-movement\",\n        children: datafolder.map(movement => {\n          return /*#__PURE__*/_jsxDEV(Folder, {\n            id: movement.folder_id,\n            name: movement.name\n          }, movement.folder_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 23\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FolderPanel, \"Typn7DINfttdZMv69QpD7CG3LH4=\", false, function () {\n  return [useUsuario, useHistory];\n});\n\n_c = FolderPanel;\nexport default FolderPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"FolderPanel\");","map":{"version":3,"sources":["C:/Users/fozza/Ensolvers_challenge/mern-crud-tasks-master/frontend/src/FolderPanel.js"],"names":["React","Item","useState","useEffect","Axios","Footer","useHistory","Folder","Menu","useUsuario","FolderPanel","props","console","log","id","setid","datafolder","setdatafolder","count","setcount","len","newfolder","setnewfolder","history","Logout","localStorage","removeItem","push","folder","getItem","get","then","response","data","result","addnewFolder","post","name","user_id","e","target","value","map","movement","folder_id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Item from './Item';\r\nimport './css/List.css';\r\nimport {useState, useEffect} from \"react\";\r\nimport Axios  from \"axios\";\r\nimport Footer from './footer';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Folder from './folders';\r\nimport './css/List_Movement.css';\r\nimport Menu from './Menu';\r\nimport {useUsuario} from './context/usuario-context';\r\n\r\n// const userAuthenticated = () =>{\r\n  \r\n  \r\n//   Axios.get('isUserAuth',{\r\n//     headers: {\r\n//       \"Authorization\" : localStorage.getItem('token')\r\n//     }\r\n\r\n//   }).then((response)=>{\r\n     \r\n//    console.log(\"hola\",response.data);\r\n//  })\r\n// }\r\n\r\n  \r\nfunction FolderPanel(props){\r\n  console.log(\"budget\")\r\n  const {id,setid} = useUsuario();\r\n  const [datafolder, setdatafolder] = useState([])\r\n  const [count, setcount] = useState(len(datafolder))\r\n  const [newfolder, setnewfolder] = useState('')\r\n  \r\n  let history = useHistory();\r\n \r\n    \r\n  const Logout = () =>{\r\n    localStorage.removeItem('token')\r\n    history.push(\"/register\")\r\n\r\n  }\r\n\r\n\r\n  useEffect( () => {\r\n\r\n    const folder = () => {\r\n      \r\n      setid(localStorage.getItem('user'))\r\n      Axios.get('folders/'+ id,{\r\n      }).then((response) => {\r\n        console.log(response.data.result) \r\n        setdatafolder(response.data.result)\r\n        \r\n      });\r\n    }\r\n    \r\n    folder()\r\n  },[id, count]);  \r\n\r\n\r\n  const addnewFolder = () => {\r\n    \r\n    Axios.post('save_folder',{\r\n      name : newfolder,\r\n      user_id : id\r\n    })\r\n    // setdatafolder([\r\n    //   ...datafolder,\r\n    //   {name:newfolder, user_id: id}\r\n      \r\n    // ]);\r\n    \r\n  }\r\n\r\n\r\n    return(\r\n      <div>    \r\n          <div>\r\n            <Menu/>\r\n          </div>\r\n          <div className=\"box-movement\">\r\n\r\n                <p className=\"text-newfolder\">Create a new folder</p>\r\n                <div className=\"addfolder-container\">\r\n                  <input className=\"newfolder\"type=\"text\" value={newfolder} placeholder=\"NEW FOLDER\"\r\n                  onChange={(e)=>{\r\n                    setnewfolder(e.target.value);\r\n                  }}\r\n                  >\r\n                  </input>\r\n                  \r\n                  <button className=\"button-folder\" \r\n                  onClick={()=> {setnewfolder(\"\");addnewFolder(); setcount(count+1) }}\r\n                  >Add</button>\r\n                </div>\r\n                <div className=\"list-movement\">\r\n                  \r\n                  {datafolder.map((movement)=>{\r\n                    \r\n                    return (\r\n                      \r\n                      <Folder  key={movement.folder_id} id={movement.folder_id} name={movement.name}/>\r\n                    )\r\n                  })}\r\n                </div>\r\n          </div>\r\n      </div>              \r\n    );\r\n}\r\n\r\n\r\nexport default  FolderPanel;"]},"metadata":{},"sourceType":"module"}