{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fozza\\\\Ensolvers_challenge\\\\mern-crud-tasks-master\\\\frontend\\\\src\\\\tasks.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./css/task.css\";\nimport { useState } from 'react';\nimport Axios from 'axios';\nimport { useUsuario } from './context/usuario-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = props => {\n  _s();\n\n  const {\n    setfolderscount,\n    folderscount\n  } = useUsuario();\n  const [edit, setedit] = useState(false);\n  const [task, settask] = useState('');\n\n  const deletetask = task_id => {\n    Axios.delete('delete_tasks/' + task_id);\n    window.location.href = \"/task/\" + task_id;\n  };\n\n  const updateTask = id => {\n    console.log(task, id);\n    Axios.put('update_tasks/', {\n      description: task,\n      task_id: id\n    });\n  };\n\n  const updateCheckbox = (done, id) => {\n    let check = 0;\n\n    if (done === 0) {\n      check = 1;\n    }\n\n    Axios.put('update_checkbox', {\n      task_id: id,\n      done: check\n    });\n  };\n\n  const taskedit = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"newfolder\",\n        type: \"text\",\n        value: \"\",\n        placeholder: \"NEW TASK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-folder\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"check\",\n        defaultChecked: props.done,\n        type: \"checkbox\",\n        onChange: e => {\n          updateCheckbox(props.done, props.id);\n          console.log(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-edit\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-edit\",\n          onChange: e => {\n            settask(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-edit-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setedit(false),\n            className: \"button-cancel-edit\",\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => updateTask(props.id),\n            className: \"image-save-edit\",\n            alt: \"ok\",\n            src: \"../img/ok.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"description\",\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setedit(true),\n        className: \"button-edit\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deletetask(props.id),\n        className: \"button-delete\",\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Task, \"oswx1+PNN9VePKCJ7gg+bGFGW6c=\", false, function () {\n  return [useUsuario];\n});\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/fozza/Ensolvers_challenge/mern-crud-tasks-master/frontend/src/tasks.js"],"names":["React","useState","Axios","useUsuario","Task","props","setfolderscount","folderscount","edit","setedit","task","settask","deletetask","task_id","delete","window","location","href","updateTask","id","console","log","put","description","updateCheckbox","done","check","taskedit","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport \"./css/task.css\"\r\nimport { useState } from 'react'\r\nimport Axios from 'axios';\r\nimport {useUsuario} from './context/usuario-context';\r\n\r\n\r\nconst Task = (props) => {\r\n    const {setfolderscount, folderscount} = useUsuario();\r\n    const [edit, setedit] = useState(false); \r\n    const [task, settask] = useState('')\r\n    \r\n    const deletetask = (task_id) => {\r\n        Axios.delete('delete_tasks/'+ task_id,\r\n        \r\n        )\r\n        window.location.href = \"/task/\" + task_id;\r\n    }\r\n    const updateTask = (id) => {\r\n        console.log(task,id)\r\n        Axios.put('update_tasks/',{\r\n            description:task,\r\n            task_id:id\r\n\r\n        })\r\n    }\r\n    const updateCheckbox = (done,id) => {\r\n        let check = 0\r\n        if (done === 0){\r\n            check = 1\r\n        }\r\n        Axios.put('update_checkbox',{\r\n            task_id:id,\r\n            done: check\r\n        })\r\n    }\r\n\r\n    const taskedit = () =>{\r\n        \r\n        return(\r\n            <div>\r\n            <input className=\"newfolder\"type=\"text\" value={\"\"} placeholder=\"NEW TASK\">\r\n                   \r\n                    </input>\r\n                    \r\n                    <button className=\"button-folder\" \r\n                    \r\n                    >Add</button>\r\n            </div>        \r\n        )\r\n    }\r\n    return (\r\n        <div className=\"task-container\">\r\n            <div className='task-box'>\r\n                <input className=\"check\" defaultChecked={props.done} type=\"checkbox\"\r\n                onChange={(e)=>{updateCheckbox(props.done, props.id);console.log(e.target.value)}}></input>\r\n                 {edit ? (\r\n                    <div className=\"container-edit\">\r\n                        <input className=\"input-edit\"\r\n                        onChange={(e)=>{\r\n                            settask(e.target.value);\r\n                        }}></input>\r\n                        <div className=\"buttons-edit-container\">\r\n                        <button onClick={()=>setedit(false)} className=\"button-cancel-edit\">X</button>\r\n                        <img onClick={()=>updateTask(props.id)} className=\"image-save-edit\" alt=\"ok\" src=\"../img/ok.png\"/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                ) : (\r\n                    <h1 className='description'>{props.description}</h1>\r\n                )}   \r\n               \r\n            </div>\r\n            <div className=\"buttons-box\">\r\n                <button onClick={()=>setedit(true)} className=\"button-edit\">Edit</button>\r\n                \r\n                <button onClick={()=>deletetask(props.id)} className=\"button-delete\">delete</button>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;"]},"metadata":{},"sourceType":"module"}