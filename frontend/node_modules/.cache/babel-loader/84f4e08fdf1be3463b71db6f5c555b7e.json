{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fozza\\\\Ensolvers_challenge\\\\mern-crud-tasks-master\\\\frontend\\\\src\\\\TaskPanel.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useUsuario } from './context/usuario-context';\nimport Menu from './Menu';\nimport Axios from \"axios\";\nimport Task from \"./tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskPanel(props) {\n  _s();\n\n  const {\n    folderid\n  } = useUsuario();\n  const [datatask, setdatatask] = useState([]);\n  const [newtask, setnewtask] = useState('');\n  useEffect(() => {\n    const folder = () => {\n      Axios.get('tasks/' + folderid, {}).then(response => {\n        setdatatask(response.data.result);\n        localStorage.setItem(response.data.result.folder_id);\n      });\n    };\n\n    folder();\n  }, [folderid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-movement\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-newfolder\",\n        children: \"Create a new folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addfolder-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"newfolder\",\n          type: \"text\",\n          value: newtask,\n          placeholder: \"NEW FOLDER\",\n          onChange: e => {\n            setnewtask(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-folder\",\n          onClick: () => {\n            setnewtask(\"\");\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-movement\",\n        children: datatask.map(task => {\n          return /*#__PURE__*/_jsxDEV(Task, {\n            id: task.task_id,\n            done: task.done,\n            description: task.description\n          }, task.folder_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskPanel, \"Do+fYqGcJaWDewjffiSwOTUFMqY=\", false, function () {\n  return [useUsuario];\n});\n\n_c = TaskPanel;\nexport default TaskPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskPanel\");","map":{"version":3,"sources":["C:/Users/fozza/Ensolvers_challenge/mern-crud-tasks-master/frontend/src/TaskPanel.js"],"names":["React","useState","useEffect","useUsuario","Menu","Axios","Task","TaskPanel","props","folderid","datatask","setdatatask","newtask","setnewtask","folder","get","then","response","data","result","localStorage","setItem","folder_id","e","target","value","map","task","task_id","done","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,UAAR,QAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AACrB,QAAM;AAACC,IAAAA;AAAD,MAAaN,UAAU,EAA7B;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AAGAC,EAAAA,SAAS,CAAE,MAAM;AAEb,UAAMY,MAAM,GAAG,MAAM;AAGnBT,MAAAA,KAAK,CAACU,GAAN,CAAU,WAAUN,QAApB,EAA6B,EAA7B,EACGO,IADH,CACSC,QAAD,IAAc;AACpBN,QAAAA,WAAW,CAACM,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAX;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqBJ,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBG,SAA1C;AAED,OALD;AAMD,KATD;;AAWAR,IAAAA,MAAM;AACP,GAdM,EAcL,CAACL,QAAD,CAdK,CAAT;AAoBE,sBACE;AAAA,4BACI;AAAA,6BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BAEM;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFN,eAGM;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,WAAjB;AAA4B,UAAA,IAAI,EAAC,MAAjC;AAAwC,UAAA,KAAK,EAAEG,OAA/C;AAAwD,UAAA,WAAW,EAAC,YAApE;AACA,UAAA,QAAQ,EAAGW,CAAD,IAAK;AACbV,YAAAA,UAAU,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD;AAHD;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAQ,UAAA,SAAS,EAAC,eAAlB;AACA,UAAA,OAAO,EAAE,MAAK;AAACZ,YAAAA,UAAU,CAAC,EAAD,CAAV;AAAiB,WADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHN,eAeM;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBAEGH,QAAQ,CAACgB,GAAT,CAAcC,IAAD,IAAQ;AAEpB,8BAEE,QAAC,IAAD;AAA4B,YAAA,EAAE,EAAEA,IAAI,CAACC,OAArC;AAA8C,YAAA,IAAI,EAAED,IAAI,CAACE,IAAzD;AAA+D,YAAA,WAAW,EAAEF,IAAI,CAACG;AAAjF,aAAYH,IAAI,CAACL,SAAjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAID,SANA;AAFH;AAAA;AAAA;AAAA;AAAA,cAfN;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCH;;GA3DMf,S;UACcJ,U;;;KADdI,S;AA8DP,eAAgBA,SAAhB","sourcesContent":["import React from 'react';\r\nimport {useState, useEffect} from \"react\";\r\nimport {useUsuario} from './context/usuario-context';\r\nimport Menu from './Menu';\r\nimport Axios from \"axios\";\r\nimport Task from \"./tasks\";\r\n\r\n\r\nfunction TaskPanel(props){\r\n    const {folderid} = useUsuario();\r\n    const [datatask, setdatatask] = useState([])\r\n    const [newtask, setnewtask] = useState('')\r\n  \r\n\r\n    useEffect( () => {\r\n\r\n        const folder = () => {\r\n          \r\n          \r\n          Axios.get('tasks/'+ folderid,{\r\n          }).then((response) => {\r\n            setdatatask(response.data.result)  \r\n            localStorage.setItem(response.data.result.folder_id)\r\n            \r\n          });\r\n        }\r\n        \r\n        folder()\r\n      },[folderid]);  \r\n\r\n\r\n    \r\n\r\n    \r\n      return(\r\n        <div>    \r\n            <div>\r\n              <Menu/>\r\n            </div>\r\n            <div className=\"box-movement\">\r\n  \r\n                  <p className=\"text-newfolder\">Create a new folder</p>\r\n                  <div className=\"addfolder-container\">\r\n                    <input className=\"newfolder\"type=\"text\" value={newtask} placeholder=\"NEW FOLDER\"\r\n                    onChange={(e)=>{\r\n                      setnewtask(e.target.value);\r\n                    }}\r\n                    >\r\n                    </input>\r\n                    \r\n                    <button className=\"button-folder\" \r\n                    onClick={()=> {setnewtask(\"\"); }}\r\n                    >Add</button>\r\n                  </div>\r\n                  <div className=\"list-movement\">\r\n                  \r\n                    {datatask.map((task)=>{\r\n                      \r\n                      return (\r\n                        \r\n                        <Task  key={task.folder_id} id={task.task_id} done={task.done} description={task.description}/>\r\n                      )\r\n                    })}\r\n                  </div>\r\n            </div>\r\n        </div>              \r\n      );\r\n  }\r\n  \r\n  \r\n  export default  TaskPanel;"]},"metadata":{},"sourceType":"module"}