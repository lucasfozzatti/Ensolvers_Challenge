{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fozza\\\\Ensolvers_challenge\\\\mern-crud-tasks-master\\\\frontend\\\\src\\\\TaskPanel.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useUsuario } from './context/usuario-context';\nimport Menu from './Menu';\nimport Axios from \"axios\";\nimport Task from \"./tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskPanel(props) {\n  _s();\n\n  const {\n    folderid,\n    setfolderid\n  } = useUsuario();\n  const [datatask, setdatatask] = useState([]);\n  const [newtask, setnewtask] = useState('');\n  useEffect(() => {\n    const task = () => {\n      setfolderid(localStorage.getItem('folder_id'));\n      Axios.get('tasks/' + folderid, {}).then(response => {\n        setdatatask(response.data.result);\n      });\n    };\n\n    task();\n  }, [folderid]);\n\n  const addnewtask = () => {\n    Axios.post('/save_tasks', {\n      description: newtask,\n      folder_id: folderid\n    });\n    setdatatask([...datatask, {\n      description: newtask,\n      folder_id: folderid\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-movement\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-newfolder\",\n        children: \"Create a new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addfolder-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"newfolder\",\n          type: \"text\",\n          value: newtask,\n          placeholder: \"NEW TASK\",\n          onChange: e => {\n            setnewtask(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-folder\",\n          onClick: () => {\n            addnewtask();\n            setnewtask(\"\");\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-movement\",\n        children: datatask.map(task => {\n          if (task.done === 1) {\n            task.done = true;\n          }\n\n          return /*#__PURE__*/_jsxDEV(Task, {\n            id: task.task_id,\n            done: task.done,\n            description: task.description\n          }, task.task_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskPanel, \"nnlaBmYxfMVTOUCL337db+aSNvo=\", false, function () {\n  return [useUsuario];\n});\n\n_c = TaskPanel;\nexport default TaskPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskPanel\");","map":{"version":3,"sources":["C:/Users/fozza/Ensolvers_challenge/mern-crud-tasks-master/frontend/src/TaskPanel.js"],"names":["React","useState","useEffect","useUsuario","Menu","Axios","Task","TaskPanel","props","folderid","setfolderid","datatask","setdatatask","newtask","setnewtask","task","localStorage","getItem","get","then","response","data","result","addnewtask","post","description","folder_id","e","target","value","map","done","task_id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useState, useEffect} from \"react\";\r\nimport {useUsuario} from './context/usuario-context';\r\nimport Menu from './Menu';\r\nimport Axios from \"axios\";\r\nimport Task from \"./tasks\";\r\n\r\n\r\nfunction TaskPanel(props){\r\n    const {folderid,setfolderid} = useUsuario();\r\n    const [datatask, setdatatask] = useState([])\r\n    const [newtask, setnewtask] = useState('')\r\n    \r\n  \r\n\r\n    useEffect( () => {\r\n\r\n        const task = () => {\r\n          \r\n            setfolderid(localStorage.getItem('folder_id'))\r\n            Axios.get('tasks/'+ folderid,{\r\n            }).then((response) => {\r\n                setdatatask(response.data.result)  \r\n            \r\n            \r\n          });\r\n        }\r\n        \r\n        task()\r\n      },[folderid]);  \r\n\r\n    const addnewtask = () => {\r\n    \r\n        Axios.post('/save_tasks',{\r\n          description : newtask,\r\n          folder_id : folderid\r\n        })\r\n        setdatatask([\r\n          ...datatask,\r\n          {description:newtask, folder_id: folderid}\r\n    \r\n        ]); \r\n      }\r\n    \r\n\r\n    \r\n      return(\r\n        <div>    \r\n            <div>\r\n              <Menu/>\r\n            </div>\r\n            <div className=\"box-movement\">\r\n  \r\n                  <p className=\"text-newfolder\">Create a new task</p>\r\n                  <div className=\"addfolder-container\">\r\n                    <input className=\"newfolder\"type=\"text\" value={newtask} placeholder=\"NEW TASK\"\r\n                    onChange={(e)=>{\r\n                      setnewtask(e.target.value);\r\n                    }}\r\n                    >\r\n                    </input>\r\n                    \r\n                    <button className=\"button-folder\" \r\n                    onClick={()=> {addnewtask();setnewtask(\"\"); }}\r\n                    >Add</button>\r\n                  </div>\r\n                  <div className=\"list-movement\">\r\n                  \r\n                    {datatask.map((task)=>{\r\n                         if(task.done === 1){task.done = true}\r\n                      return (\r\n                        \r\n                        <Task  key={task.task_id} id={task.task_id} done={task.done} description={task.description}/>\r\n                      )\r\n                    })}\r\n                  </div>\r\n            </div>\r\n        </div>              \r\n      );\r\n  }\r\n  \r\n  \r\n  export default  TaskPanel;"]},"metadata":{},"sourceType":"module"}