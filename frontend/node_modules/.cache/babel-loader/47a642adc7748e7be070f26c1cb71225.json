{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fozza\\\\Ensolvers_challenge\\\\mern-crud-tasks-master\\\\frontend\\\\src\\\\FolderPanel.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Item from './Item';\nimport './css/List.css';\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport Footer from './footer';\nimport { useHistory } from \"react-router-dom\";\nimport Folder from './folders';\nimport './css/List_Movement.css';\nimport Menu from './Menu';\nimport { useUsuario } from './context/usuario-context'; // const userAuthenticated = () =>{\n//   Axios.get('isUserAuth',{\n//     headers: {\n//       \"Authorization\" : localStorage.getItem('token')\n//     }\n//   }).then((response)=>{\n//    console.log(\"hola\",response.data);\n//  })\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FolderPanel(props) {\n  _s();\n\n  console.log(\"budget\");\n  const {\n    id,\n    folderscount,\n    setid\n  } = useUsuario();\n  const [datafolder, setdatafolder] = useState([]);\n  const [newfolder, setnewfolder] = useState('');\n  let history = useHistory();\n\n  const Logout = () => {\n    localStorage.removeItem('token');\n    history.push(\"/register\");\n  };\n\n  useEffect(() => {\n    const folder = () => {\n      setid(localStorage.getItem('user'));\n      Axios.get('folders/' + id, {}).then(response => {\n        console.log(response.data.result);\n        setdatafolder(response.data.result);\n      });\n    };\n\n    folder();\n  }, [newfolder]);\n\n  const addnewFolder = event => {\n    event.preventDefault();\n    Axios.post('save_folder', {\n      name: newfolder,\n      user_id: id\n    });\n    setdatafolder(prevItems => [...prevItems, {\n      name: newfolder,\n      user_id: id\n    }]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AddItemForm, {\n        addnewFolder: addnewFolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this);\n  };\n\n  const AddItemForm = props => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-movement\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-newfolder\",\n        children: \"Create a new folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addfolder-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: props.addnewFolder,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"newfolder\",\n            type: \"text\",\n            autoComplete: \"off\",\n            value: newfolder,\n            placeholder: \"NEW FOLDER\" // onChange={(e)=>{\n            //   setnewfolder(e.target.value);\n            // }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-folder\",\n          onClick: () => {\n            setnewfolder(\"\");\n            addnewFolder(addnewFolder);\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }, this);\n\n  {\n    /* <div className=\"list-movement\">\r\n    \n     {datafolder.map((movement)=>{\r\n       \r\n       return (\r\n         \r\n         <Folder  key={movement.folder_id} id={movement.folder_id} name={movement.name}/>\r\n       )\r\n     })}\r\n    </div>\r\n    </div>\r\n    </div>              \r\n    ); */\n  }\n}\n\n_s(FolderPanel, \"YzUrUZWw+lyonjsQetFQJCPGfyI=\", false, function () {\n  return [useUsuario, useHistory];\n});\n\n_c = FolderPanel;\nexport default FolderPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"FolderPanel\");","map":{"version":3,"sources":["C:/Users/fozza/Ensolvers_challenge/mern-crud-tasks-master/frontend/src/FolderPanel.js"],"names":["React","Item","useState","useEffect","Axios","Footer","useHistory","Folder","Menu","useUsuario","FolderPanel","props","console","log","id","folderscount","setid","datafolder","setdatafolder","newfolder","setnewfolder","history","Logout","localStorage","removeItem","push","folder","getItem","get","then","response","data","result","addnewFolder","event","preventDefault","post","name","user_id","prevItems","AddItemForm"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Item from './Item';\r\nimport './css/List.css';\r\nimport {useState, useEffect} from \"react\";\r\nimport Axios  from \"axios\";\r\nimport Footer from './footer';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Folder from './folders';\r\nimport './css/List_Movement.css';\r\nimport Menu from './Menu';\r\nimport {useUsuario} from './context/usuario-context';\r\n\r\n// const userAuthenticated = () =>{\r\n  \r\n  \r\n//   Axios.get('isUserAuth',{\r\n//     headers: {\r\n//       \"Authorization\" : localStorage.getItem('token')\r\n//     }\r\n\r\n//   }).then((response)=>{\r\n     \r\n//    console.log(\"hola\",response.data);\r\n//  })\r\n// }\r\n\r\n  \r\nfunction FolderPanel(props){\r\n  console.log(\"budget\")\r\n  const {id,folderscount,setid} = useUsuario();\r\n  const [datafolder, setdatafolder] = useState([])\r\n  const [newfolder, setnewfolder] = useState('')\r\n  \r\n  let history = useHistory();\r\n \r\n    \r\n  const Logout = () =>{\r\n    localStorage.removeItem('token')\r\n    history.push(\"/register\")\r\n  }\r\n\r\n  \r\n\r\n  useEffect( () => {\r\n\r\n    const folder = () => {\r\n      \r\n      setid(localStorage.getItem('user'))\r\n      Axios.get('folders/'+ id,{\r\n      }).then((response) => {\r\n        console.log(response.data.result) \r\n        setdatafolder(response.data.result)\r\n        \r\n      });\r\n    }\r\n    \r\n    folder()\r\n  },[newfolder]);  \r\n\r\n\r\n  const addnewFolder = (event) => {\r\n    event.preventDefault();\r\n    Axios.post('save_folder',{\r\n      name : newfolder,\r\n      user_id : id\r\n    })\r\n    setdatafolder((prevItems)=>[...prevItems,{name:newfolder, user_id: id}]); \r\n\r\n  return (\r\n    <div>\r\n      <AddItemForm addnewFolder={addnewFolder} />\r\n     \r\n    </div>\r\n  );\r\n  }\r\n\r\n\r\n  \r\nconst AddItemForm = (props) => (\r\n    \r\n      <div>    \r\n          <div>\r\n            <Menu/>\r\n          </div>\r\n          <div className=\"box-movement\">\r\n\r\n                <p className=\"text-newfolder\">Create a new folder</p>\r\n                <div className=\"addfolder-container\">\r\n                <form onSubmit={props.addnewFolder}>\r\n                  <input className=\"newfolder\"type=\"text\" autoComplete=\"off\" value={newfolder} placeholder=\"NEW FOLDER\"\r\n                  // onChange={(e)=>{\r\n                  //   setnewfolder(e.target.value);\r\n                  // }}\r\n                  >\r\n                  </input>\r\n                  </form>  \r\n                  <button className=\"button-folder\" \r\n                  onClick={()=> {setnewfolder(\"\");addnewFolder(addnewFolder) }}\r\n                  >Add</button>\r\n                </div>\r\n            </div>\r\n          </div>\r\n               \r\n            \r\n        )\r\n                {/* <div className=\"list-movement\">\r\n                \r\n                  {datafolder.map((movement)=>{\r\n                    \r\n                    return (\r\n                      \r\n                      <Folder  key={movement.folder_id} id={movement.folder_id} name={movement.name}/>\r\n                    )\r\n                  })}\r\n                </div>\r\n          </div>\r\n      </div>              \r\n    ); */}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default  FolderPanel;"]},"metadata":{},"sourceType":"module"}